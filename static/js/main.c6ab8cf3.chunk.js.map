{"version":3,"sources":["components/header/index.tsx","components/listOfNames/trash.svg","components/listOfNames/star.svg","components/listOfNames/selectedStar.svg","components/listOfNames/index.tsx","components/pagination/index.tsx","ui/inputBox/index.tsx","common/data.tsx","common/helper.tsx","components/inputField/index.tsx","common/useDebounceHook.tsx","components/index.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","ListItems","friendList","handleAddToFavorite","handleDelete","map","eachFriend","name","onClick","id","isFavorite","src","SelectedStar","StarIcon","alt","window","confirm","confirmDelete","TrashIcon","length","React","memo","Pagination","totalList","currentPage","namesPerPage","handlePaginationChange","pageNumbers","i","Math","ceil","push","eachPageNumber","event","InputBox","handleOnKeyChange","value","placeholder","handleChange","onKeyUp","onChange","autoFocus","autoCorrect","Data","sortTheNamesBasedOnFavorites","sort","name1","name2","paginationLogic","indexOfLastName","indexOfFirstName","slice","addNameToFavorite","updatedList","index","findIndex","eachItem","deleteName","filter","eachName","nameValidation","test","initialState","defaultFriendList","helper","searchValue","reducer","state","action","type","updatedListAfterAddingName","handleNewInsertion","page","Error","updatedState","newName","unshift","InputField","useReducer","dispatch","debouncedValue","delay","useState","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","filteredData","toLowerCase","includes","e","target","key","preventDefault","alert","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6ab8cf3.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css';\n\nconst Header = () => {\n  return(\n    <header className=\"header\">Friends List</header>\n  )\n}\n\nexport default Header","export default __webpack_public_path__ + \"static/media/trash.68b967f5.svg\";","export default __webpack_public_path__ + \"static/media/star.9b27ec8d.svg\";","export default __webpack_public_path__ + \"static/media/selectedStar.c954afed.svg\";","import React from 'react';\nimport './index.css';\nimport TrashIcon from './trash.svg';\nimport StarIcon from './star.svg'\nimport SelectedStar from './selectedStar.svg'\n\ninterface ListTypes {\n  id: number,\n  isFavorite: boolean,\n  name: string,\n}\n\ntype TListItem = {\n  friendList : ListTypes[],\n  handleAddToFavorite: (index:number) => void,\n  handleDelete : (id:number) => void\n}\n\n\nconst ListItems = ({friendList,handleAddToFavorite,handleDelete}:TListItem) => {\n\n  const confirmDelete = (id:number) => {\n    if(window?.confirm(\"Are you sure you want to delete from list?\")) {\n      handleDelete(id)\n   }\n  }\n  \n  return (\n    <div className=\"list-wrapper\">\n    {friendList?.map(((eachFriend)=>(\n      <div className=\"flex-wrapper list\" key={eachFriend?.id}>\n        <div>\n          <p className=\"name-text\">{eachFriend?.name} </p>\n          <span className=\"friend-text\">is your friend </span>\n        </div>\n       <div className=\"flex-wrapper\">\n        <span onClick={()=>handleAddToFavorite(eachFriend?.id)}>\n        <figure className={`icon-figure ${eachFriend?.isFavorite ? 'favorite':''}`}>\n            <img src={eachFriend?.isFavorite?SelectedStar:StarIcon} alt=\"favorite\" />\n          </figure>\n        </span>\n        <span onClick={()=>confirmDelete(eachFriend?.id)}>\n          <figure className=\"icon-figure\">\n            <img src={TrashIcon} alt=\"trash\"/>\n          </figure>\n        </span>  \n      </div> \n      </div>\n    )))} \n    {friendList?.length === 0 && <p className=\"not-found\">No Such friend found ! Press 'Enter' to add in the list</p>}\n    </div>\n  )\n}\n\nexport default React.memo(ListItems);\n","import React from 'react';\nimport './index.css';\n\ntype TpaginationProps= {\n  totalList: number,\n  currentPage: number,\n  namesPerPage: number,\n  handlePaginationChange: (event:React.MouseEventHandler<HTMLLIElement>)=>void,\n}\n\nconst Pagination = ({totalList,currentPage,namesPerPage,handlePaginationChange}:TpaginationProps) => {\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalList/ namesPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  return (\n    <>\n    {pageNumbers?.length ?\n      <div className=\"pagination-wrapper\">\n      { pageNumbers?.map((eachPageNumber:number)=>{\n        return(\n          <li\n            key={eachPageNumber}\n            id={eachPageNumber+''}\n            onClick={(event:any)=>handlePaginationChange(event)}\n            className={`list-items ${currentPage === eachPageNumber ? 'active':''}`}\n          >\n          {eachPageNumber}\n          </li>\n        )})}\n    </div>:''}\n    </>\n  )\n}\n\nexport default React.memo(Pagination);","import React from \"react\";\nimport './index.css'\n\ntype TInputProps = {\n  handleOnKeyChange: (e:React.KeyboardEvent)=>void,\n  handleChange: (e:React.ChangeEvent<HTMLInputElement>)=>void,\n  value: string,\n  placeholder: string\n}\n\nconst InputBox = ({handleOnKeyChange,value,placeholder,handleChange}:TInputProps) => {\n  return(\n  <input\n    onKeyUp={handleOnKeyChange}\n    onChange={handleChange}\n    value={value}\n    placeholder={placeholder}\n    autoFocus={true}\n    autoCorrect=\"false\"\n    className=\"input\"\n  />\n  )\n  \n}\n\nexport default InputBox;","export const Data = [\n  {\n    name:'Karthick Raja',\n    isFavorite: true,\n    id:1\n  },\n  {\n    name:'Shivangi Sharma',\n    isFavorite: false,\n    id:2\n  },\n  {\n    name:'Akash singh',\n    isFavorite: false,\n    id:3\n  },\n  {\n    name:'Rahul Gupta',\n    isFavorite: false,\n    id:4\n  },\n  {\n    name:'Yuvraj Singh',\n    isFavorite: false,\n    id:5\n  },\n  {\n    name:'Virat Kolhi',\n    isFavorite: false,\n    id:6\n  },\n  {\n    name:'Ms Dhoni',\n    isFavorite: false,\n    id:7\n  },\n  {\n    name:'Nayanthara',\n    isFavorite: false,\n    id:8\n  },\n  {\n    name:'Keerthi Shetty',\n    isFavorite: false,\n    id:9\n  },\n  {\n    name:'Kaviya Maran',\n    isFavorite: false,\n    id:10\n  }\n]","\ninterface ListTypes {\n  id: number,\n  isFavorite: boolean,\n  name: string,\n}\n\ntype TupdateProps = {\n  friendList : ListTypes[],\n  id: number\n}\n\n\nexport const sortTheNamesBasedOnFavorites = (friendList:Array<ListTypes>) => {\n let sortedValues =  friendList?.sort((name1:ListTypes, name2:ListTypes)=> {\n    return (name1?.isFavorite === name2?.isFavorite)? 0 : name1?.isFavorite? -1 : 1;\n});\nreturn sortedValues;\n}\n\nexport const paginationLogic = (friendList:Array<ListTypes>,currentPage:number,namesPerPage:number) => {\n  const indexOfLastName = currentPage * namesPerPage;\n  const indexOfFirstName = indexOfLastName - namesPerPage;\n  const currentNames = friendList?.slice(indexOfFirstName, indexOfLastName);\n  return currentNames\n}\n\nexport const addNameToFavorite = ({friendList,id}:TupdateProps) => {\n  let updatedList = [...friendList];\n  let index = updatedList.findIndex(eachItem => eachItem.id === id);\n  updatedList[index].isFavorite =  !updatedList[index].isFavorite;\n  return updatedList\n\n}\n\nexport const deleteName = ({friendList,id}:TupdateProps) => {\n  return friendList.filter(eachName=>eachName.id !== id);\n}\n\nexport const nameValidation = (name:string) => {\n  if(/^[a-zA-Z ]*$/.test(name) && name && name!== \" \")\n  return true\n  else \n  return false \n}","import React,{useEffect,useReducer} from 'react';\nimport ListItems from '../listOfNames';\nimport Pagination from '../pagination';\nimport InputBox from '../../ui/inputBox';\nimport {Data} from '../../common/data';\nimport {useDebounce} from '../../common/useDebounceHook';\nimport * as helper from '../../common/helper';\nimport './index.css';\n\ntype Actions =\n  | { type: 'SEARCH_RESULTS', updatedList: ListTypes[] }\n  | { type: 'ADD_FAVORITE', updatedList: ListTypes[] }\n  | { type: 'DELETE_NAME', updatedList: ListTypes[] }\n  | { type: 'INSERT_NAME', name: string }\n  | { type: 'ON_INPUT_CHANGE', value: string }\n  | { type: 'ON_PAGE_CHANGE', page: number }\n  | { type: 'RESET'}\n\ninterface ListTypes {\n    id: number,\n    isFavorite: boolean,\n    name: string,\n}\n  \ninterface IState {\n    friendList: ListTypes[],\n    defaultFriendList : ListTypes[],\n    searchValue : string,\n    currentPage: number,\n    namesPerPage : number\n}\n\nconst initialState: IState = { \n  defaultFriendList: helper.sortTheNamesBasedOnFavorites(Data), \n  friendList: helper.sortTheNamesBasedOnFavorites(Data),\n  searchValue:'',\n  currentPage: 1,\n  namesPerPage: 4\n};\n\nconst reducer: React.Reducer<IState, Actions> = (state, action) => {\n  switch (action.type) {\n    case 'INSERT_NAME':\n      const updatedListAfterAddingName = handleNewInsertion(state?.defaultFriendList, action?.name);\n      return {\n        ...state, \n        friendList: updatedListAfterAddingName, \n        defaultFriendList: updatedListAfterAddingName, \n        searchValue: '' \n      }\n\n    case 'ON_INPUT_CHANGE':\n      return {...state, searchValue: action?.value }\n\n    case 'SEARCH_RESULTS':\n      return { ...state, friendList: action?.updatedList,currentPage:1 };\n\n    case 'ADD_FAVORITE':\n      return { ...state, friendList: action?.updatedList ,defaultFriendList: action?.updatedList  };\n\n    case 'DELETE_NAME':\n      return { ...state, friendList: action?.updatedList ,defaultFriendList: action?.updatedList };\n\n    case 'ON_PAGE_CHANGE':\n      return { ...state, currentPage: action.page };\n\n    case 'RESET':  \n      return {...state, friendList: state?.defaultFriendList, searchValue:'',currentPage: 1, namesPerPage: 4 }\n\n    default:\n      throw new Error();\n  }\n}\n\nconst handleNewInsertion = (friendList:Array<ListTypes>,name:string) => {\n   let updatedState = [...friendList];\n   let newName = {\n     name: name,\n     isFavorite: false,\n     id : friendList?.length + 1\n   }\n   updatedState.unshift(newName);\n   return updatedState;\n}\n\nconst handleNameSearch = (defaultFriendList:Array<ListTypes>,name:string) => {\n  return defaultFriendList?.filter(eachFriend => eachFriend.name.toLowerCase().includes(name.toLowerCase()));\n}\n\n\nconst InputField:React.FC= () => {\n\n  const [state, dispatch] = useReducer<React.Reducer<IState, Actions>>(reducer, initialState);\n  const debouncedValue: string = useDebounce(state?.searchValue, 300);\n\n  useEffect(() => {\n    if(debouncedValue){\n     let filteredData = handleNameSearch(state?.defaultFriendList,debouncedValue);\n     filteredData = helper.sortTheNamesBasedOnFavorites(filteredData);\n     dispatch({ type: 'SEARCH_RESULTS', updatedList: filteredData })\n    }\n  }, [debouncedValue])\n\n\n  const handleOnKeyChange = (e:React.KeyboardEvent) => {\n    if(e.key === \"Enter\"){\n      e.preventDefault();\n      if(helper.nameValidation(state?.searchValue)){\n        dispatch({ type: 'INSERT_NAME', name: state?.searchValue })\n      }\n      else{\n        alert('Enter valid name !')\n      }\n    }\n   \n  }\n\n  const handleChange = (e:React.ChangeEvent<HTMLInputElement>) => {\n    if(e?.target?.value)\n    dispatch({ type: 'ON_INPUT_CHANGE', value: e?.target?.value })\n    else\n    dispatch ({type:'RESET'})\n  }\n\n  const handleAddToFavorite = (id:number) => {\n    let updatedList = helper.addNameToFavorite({friendList: state?.friendList,id});\n    dispatch({ type: 'ADD_FAVORITE', updatedList })\n  }\n\n  const handleDelete = (id:number) => {\n    let updatedList = helper.deleteName({friendList: state?.friendList,id})\n    dispatch({ type: 'DELETE_NAME', updatedList })\n  }\n\n  const handlePaginationChange = (event:any) => {\n    dispatch({ type: 'ON_PAGE_CHANGE', page: +event?.target?.id })\n  }\n\n  return(\n    <>\n    <div className=\"input-box-wrapper\">\n     <InputBox\n       handleChange ={handleChange}\n       handleOnKeyChange = {handleOnKeyChange}\n       value ={state?.searchValue}\n       placeholder=\"Enter your friend's name\"\n     />\n    </div>\n    <ListItems\n     friendList ={helper?.paginationLogic(state?.friendList,state?.currentPage,state?.namesPerPage)}\n     handleAddToFavorite = {handleAddToFavorite}\n     handleDelete ={handleDelete}\n    />\n    <Pagination \n     totalList = {state?.friendList?.length}\n     currentPage = {state?.currentPage}\n     namesPerPage ={state?.namesPerPage}\n     handlePaginationChange = {handlePaginationChange}\n    />\n    </>\n  )\n}\n\nexport default InputField;","import  {useState,useEffect} from 'react';\n\nexport const  useDebounce  = (value: string, delay: number) => {\n  const [debouncedValue, setDebouncedValue] = useState<string>(value);\n  useEffect(() => {\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay]  \n  );\n  return debouncedValue;\n}","import Header from './header';\nimport InputField from './inputField';\nimport './index.css';\n\n\nconst Component = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"components-wrapper\">\n        <Header/>\n        <InputField/>\n      </div>\n    </div>  \n  )\n}\n\nexport default Component;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Component from './components';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n     <Component />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}